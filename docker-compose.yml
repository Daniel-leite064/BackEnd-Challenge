version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=challengedb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - /tmp/database:/var/lib/postgresql/data

  localstack:
    image: "localstack/localstack:latest"
    container_name: "localstack"
    ports:
      - "4510-4559:4510-4559"
    environment:
      SERVICES: "s3,sqs"
      LOCALSTACK_ENDPOINT_SQS: "http://localhost:4566"
      LOCALSTACK_ENDPOINT_S3: "http://localhost:4566"
    networks:
      ls:
        ipv4_address: 10.0.2.20

  setup-resources:
    image: "amazon/aws-cli:latest"
    container_name: "setup-resources"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=us-east-1
      - LOCALSTACK_ENDPOINT_SQS=${LOCALSTACK_ENDPOINT_SQS}
      - LOCALSTACK_ENDPOINT_S3=${LOCALSTACK_ENDPOINT_S3}
      - SQS_QUEUE_BIKE_ORDERS=${SQS_QUEUE_BIKE_ORDERS}
      - SQS_QUEUE_BIKE_ORDERS_DLQ=${SQS_QUEUE_BIKE_ORDERS_DLQ}
    entrypoint: /bin/sh -c
    command: >
      "
      echo Configuring Credentials...;
      aws configure set aws_access_key_id localstack;
      aws configure set aws_secret_access_key localstack;
      aws configure set default.region ${AWS_DEFAULT_REGION};
      aws configure set default.output json;
      echo [OK];

      echo Configuring SQS Queues...;
      aws --endpoint-url ${LOCALSTACK_ENDPOINT_SQS} --region ${AWS_DEFAULT_REGION} sqs create-queue --queue-name ${SQS_QUEUE_BIKE_ORDERS};
      aws --endpoint-url ${LOCALSTACK_ENDPOINT_SQS} --region ${AWS_DEFAULT_REGION} sqs create-queue --queue-name ${SQS_QUEUE_BIKE_ORDERS_DLQ};
      echo [SQS] OK;

      echo Configuring S3 Buckets...;

      aws --endpoint-url ${LOCALSTACK_ENDPOINT_S3} --region ${AWS_DEFAULT_REGION} s3 mb s3://bikedocs;
      aws --endpoint-url ${LOCALSTACK_ENDPOINT_S3} --region ${AWS_DEFAULT_REGION} s3 mb s3://logs;

      echo [S3] OK;
      echo Ready.;
      "
    networks:
      ls:
        ipv4_address: 10.0.2.21
    depends_on:
      - localstack

  backend.api:
    build:
      context: .
      dockerfile: src/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=postgres;Port=5432;Database=challengedb;UserId=admin;Password=admin;"
    depends_on:
      - postgres
      - localstack
    ports:
      - "3333:80"
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24

